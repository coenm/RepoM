<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="clr-namespace:RepoM.App"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    >

    <!--  The taskbar context menu - the first row is a dummy to show off simple data binding  -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Key="SysTrayMenu" x:Shared="false">
        <ui:MenuItem Command="{Binding OpenCommand}" Header="{DynamicResource Open}" />
        <ui:MenuItem
            Command="{Binding StartWithWindows}"
            Header="{DynamicResource StartWithWindows}"
            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
            />
        <ui:MenuItem
            Command="{Binding DoNotStartWithWindows}"
            Header="{DynamicResource NotStartWithWindows}"
            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
            />
        <Separator />
        <ui:MenuItem Command="{Binding ExitApplicationCommand}" Header="{DynamicResource Exit}" />
    </ContextMenu>


    <!--  the application's NotifyIcon - started from App.xaml.cs. Declares its own view model.  -->
    <tb:TaskbarIcon
        x:Key="NotifyIcon"
        ContextMenu="{StaticResource SysTrayMenu}"
        IconSource="/App.ico"
        LeftClickCommand="{Binding OpenCommand}"
        NoLeftClickDelay="True"
        >

        <!--  self-assign a data context (could also be done programmatically)  -->
        <tb:TaskbarIcon.DataContext>
            <app:NotifyIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>

</ResourceDictionary>