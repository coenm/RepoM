{{~
func is_const(member)
    ret member.IsConst;
end

func is_funcs(member)
    ret !member.IsConst;
end

func prefix_module(member)
    ret module.Name | string.append "." | string.append member | string.downcase;
end

module_name = module.Name | string.downcase;
~}}
{{~ if !module.IsBuiltin ~}}
# `{{module.Name}}`

{{ module.Description }}

{{~ end ~}}
{{~ if array.size(module.Members) > 0  ~}}
This module contains the following methods, variables and/or constants:

  {{~ for member in module.Members ~}}
- [`{{ prefix_module member.Name }}`](#{{ module_name | string.append "." | string.append member.Name | string.downcase | string.handleize }})
  {{~ end ~}}
{{~ end ~}}
{{~ ~}}
{{~ for member in module.Members ~}}

## {{ member.Name }}

`{{ prefix_module member.Name }}{{~ if member.Params.size > 0 ~}}({{~ for param in member.Params ~}}{{ param.Name }}{{ param.IsOptional?'?':''}}{{ for.last?'':',' }}{{~ end ~}}){{~ end ~}}`

  {{~ if member.Description ~}}
{{ member.Description | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
  {{~ end ~}}
  {{~ if member.Params.size > 0 ~}}

Argument{{if member.Params.size > 1}}s{{end}}:

    {{~ for param in member.Params ~}}
- `{{ param.Name }}`: {{ param.Description}}
    {{~end ~}}
  {{~ end ~}}
  {{~ if member.Returns ~}}

### Returns

{{ member.Returns | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
  {{~ end ~}}
  {{~ if member.Remarks ~}}

### Remarks

{{ member.Remarks | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
  {{~ end ~}}
  {{~ if member.Examples.size > 0 ~}}

    {{~ for example in member.Examples ~}}
### Example
{{ if !string.empty example.Description }}
{{ example.Description | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
{{ end }}
      {{~ if example.Input ~}}
        {{~ if example.Output ~}}
#### Input
        {{~ end ~}}

```yaml
{{ example.Input | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
```

      {{~ end ~}}
      {{~ if example.Output ~}}
#### Result

```yaml
{{ example.Output | regex.replace `^\s{4}` '' 'm' | string.rstrip }}
```
      {{~ end ~}}
    {{~ end ~}}
  {{~ end ~}}
{{~ end ~}}
