# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#variables
# https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#share-variables-across-pipelines
# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml

trigger: none

pr:
  - main
  - release/*
  - feature/*

pool:
  vmImage: 'windows-latest'

stages:
  - stage: "Build"
    displayName: "Artifact build"
    jobs:
      - job: "Build"
        displayName: "Artifact build"
        variables:
          - name: DOTNET_CLI_TELEMETRY_OPTOUT
            value: 1
          - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
            value: 1
          - name: BuildConfiguration
            value: Release

        steps:
        - checkout: self
          fetchDepth: 0 # avoid shallow clone so nbgv can do its work.
          clean: true

        - script: git submodule update --init --recursive
          displayName: Update git submodules

        # required for mdsnippets?!
        - task: UseDotNet@2
          displayName: "Use dotnet sdk 6.0.x"
          inputs:
            version: 6.0.x
            includePreviewVersions: false

        - task: UseDotNet@2
          displayName: "Use dotnet sdk 7.0.x"
          inputs:
            version: 7.0.x
            includePreviewVersions: false

        - script: dotnet --info
          displayName: Show dotnet SDK info

        - task: NuGetToolInstaller@1
          displayName: Install Nuget 5x
          inputs:
            versionSpec: '5.*'
            checkLatest: true

        - pwsh: |
            dotnet tool install --global --version 25.1.0 MarkdownSnippets.Tool
            mdsnippets 
            
            $changedLines = git status --porcelain=v1
            $changedFileCount = $changedLines | wc -l
            
            if ($changedFileCount -gt 0) {
              Write-Host "The following $changedFileCount file(s) are not up to date:"
              $lines = $changedLines -split "`n"
              foreach ($line in $lines) {
                Write-Host " - $line"
              }

              Write-Error "There are local changes in the git repository meaning not all markdown snippets are up to date."
              exit 1
            }
          displayName: Verify markdown snippets are up to date
          name: mdsnippets
          failOnStderr: true

        - pwsh: |
            dotnet tool install --tool-path . nbgv
            ./nbgv cloud -a
          displayName: Set build number
          name: Nbgv

        - task: DotNetCoreCLI@2
          displayName: DotNet Restore
          inputs:
            command: restore
            projects: '**/*.csproj'

        - task: SonarCloudPrepare@1
          displayName: Prepare analysis on SonarCloud
          inputs:
            SonarCloud: SonarCloudGithub
            organization: coenm-github
            projectKey: RepoM
            projectName: RepoM
            extraProperties: |
              sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/**/*.trx
              sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/*.opencover.xml

        - task: DotNetCoreCLI@2
          displayName: DotNet Build
          inputs:
            command: build
            projects: '**/*.sln'
            arguments: '--configuration $(BuildConfiguration)'

        - task: DotNetCoreCLI@2
          displayName: Dotnet Test
          inputs:
            command: test
            projects: 'tests/**/*.csproj'
            arguments: >-
              --no-build --configuration $(buildConfiguration) 
              --collect:"XPlat Code Coverage;Format=cobertura,opencover" 
              --logger trx 
              /p:ExcludeByAttribute=CompilerGenerated 
            publishTestResults: true

        - task: SonarCloudAnalyze@1
          displayName: Run Code Analysis

        - task: SonarCloudPublish@1
          displayName: Publish Quality Gate Result